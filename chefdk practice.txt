login as: ec2-user
Authenticating with public key "imported-openssh-key"
Last login: Tue Apr  4 04:25:26 2017 from 122.171.221.10

       __|  __|_  )
       _|  (     /   Amazon Linux AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-ami/2016.09-release-notes/
12 package(s) needed for security, out of 23 available
Run "sudo yum update" to apply all updates.
[ec2-user@chefdk ~]$ sudo su
[root@chefdk ec2-user]# knife
bash: knife: command not found
[root@chefdk ec2-user]# wget https://packages.chef.io/files/stable/chefdk/1.2.22/el/6/chefdk-1.2.22-1.el6.x86_64.rpm
--2017-04-04 04:31:58--  https://packages.chef.io/files/stable/chefdk/1.2.22/el/6/chefdk-1.2.22-1.el6.x86_64.rpm
Resolving packages.chef.io (packages.chef.io)... 151.101.8.65
Connecting to packages.chef.io (packages.chef.io)|151.101.8.65|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 110002369 (105M) [application/x-rpm]
Saving to: ‘chefdk-1.2.22-1.el6.x86_64.rpm’

chefdk-1.2.22-1.el6 100%[===================>] 104.91M   102MB/s    in 1.0s

2017-04-04 04:31:59 (102 MB/s) - ‘chefdk-1.2.22-1.el6.x86_64.rpm’ saved [110002369/110002369]

[root@chefdk ec2-user]# chef
bash: chef: command not found
[root@chefdk ec2-user]# rpm -qa chef
[root@chefdk ec2-user]# rpm -qa chefdk
[root@chefdk ec2-user]# rpm -ivh chefdk-1.2.22-1.el6.x86_64.rpm
warning: chefdk-1.2.22-1.el6.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
Preparing...                          ################################# [100%]
Updating / installing...
   1:chefdk-1.2.22-1.el6              ################################# [100%]
Thank you for installing Chef Development Kit!
[root@chefdk ec2-user]# knife
ERROR: You need to pass a sub-command (e.g., knife SUB-COMMAND)

Usage: knife sub-command (options)
    -s, --server-url URL             Chef Server URL
        --chef-zero-host HOST        Host to start chef-zero on
        --chef-zero-port PORT        Port (or port range) to start chef-zero on.  Port ranges like 1000,1010 or 8889-9999 will try all given ports until one works.
    -k, --key KEY                    API Client Key
        --[no-]color                 Use colored output, defaults to enabled
    -c, --config CONFIG              The configuration file to use
        --config-option OPTION=VALUE Override a single configuration option
        --defaults                   Accept default values for all questions
    -d, --disable-editing            Do not open EDITOR, just accept the data as is
    -e, --editor EDITOR              Set the editor to use for interactive commands
    -E, --environment ENVIRONMENT    Set the Chef environment (except for in searches, where this will be flagrantly ignored)
        --[no-]fips                  Enable fips mode
    -F, --format FORMAT              Which format to use for output
        --[no-]listen                Whether a local mode (-z) server binds to a port
    -z, --local-mode                 Point knife commands at local repository instead of server
    -u, --user USER                  API Client Username
        --print-after                Show the data after a destructive operation
    -V, --verbose                    More verbose output. Use twice for max verbosity
    -v, --version                    Show chef version
    -y, --yes                        Say yes to all prompts for confirmation
    -h, --help                       Show this message

Available subcommands: (for details, knife SUB-COMMAND --help)

** OPSCODE PRIVATE CHEF ORGANIZATION MANAGEMENT COMMANDS **
knife opc org create ORG_SHORT_NAME ORG_FULL_NAME (options)
knife opc org delete ORG_NAME
knife opc org edit ORG
knife opc org list
knife opc org show ORGNAME
knife opc org user add ORG_NAME USER_NAME
knife opc org user remove ORG_NAME USER_NAME
knife opc user create USERNAME FIRST_NAME [MIDDLE_NAME] LAST_NAME EMAIL PASSWORD
knife opc user delete USERNAME [-d]
knife opc user edit USERNAME
knife opc user list
knife opc user password USERNAME [PASSWORD | --enable-external-auth]
knife opc user show USERNAME

** BOOTSTRAP COMMANDS **
knife bootstrap [SSH_USER@]FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife bootstrap windows winrm FQDN (options)

** CLIENT COMMANDS **
knife client bulk delete REGEX (options)
knife client create CLIENTNAME (options)
knife client delete [CLIENT[,CLIENT]] (options)
knife client edit CLIENT (options)
Usage: /usr/bin/knife (options)
knife client key delete CLIENT KEYNAME (options)
knife client key edit CLIENT KEYNAME (options)
knife client key list CLIENT (options)
knife client key show CLIENT KEYNAME (options)
knife client list (options)
knife client reregister CLIENT (options)
knife client show CLIENT (options)

** CONFIGURE COMMANDS **
knife configure (options)
knife configure client DIRECTORY

** COOKBOOK COMMANDS **
knife cookbook bulk delete REGEX (options)
knife cookbook create COOKBOOK (options)
knife cookbook delete COOKBOOK VERSION (options)
knife cookbook download COOKBOOK [VERSION] (options)
knife cookbook list (options)
knife cookbook metadata COOKBOOK (options)
knife cookbook metadata from FILE (options)
knife cookbook show COOKBOOK [VERSION] [PART] [FILENAME] (options)
knife cookbook test [COOKBOOKS...] (options)
knife cookbook upload [COOKBOOKS...] (options)

** COOKBOOK SITE COMMANDS **
knife cookbook site download COOKBOOK [VERSION] (options)
knife cookbook site install COOKBOOK [VERSION] (options)
knife cookbook site list (options)
knife cookbook site search QUERY (options)
knife cookbook site share COOKBOOK [CATEGORY] (options)
knife cookbook site show COOKBOOK [VERSION] (options)
knife cookbook site unshare COOKBOOK

** DATA BAG COMMANDS **
knife data bag create BAG [ITEM] (options)
knife data bag delete BAG [ITEM] (options)
knife data bag edit BAG ITEM (options)
knife data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife data bag list (options)
knife data bag show BAG [ITEM] (options)

** DECRYPT COMMANDS **
knife decrypt VAULT ITEM [VALUES] (options)

** EC2 COMMANDS **
knife ec2 amis ubuntu DISTRO [TYPE] (options)

** ENCRYPT COMMANDS **
knife encrypt create VAULT ITEM VALUES (options)
knife encrypt delete VAULT ITEM (options)
knife encrypt remove VAULT ITEM VALUES (options)
knife encrypt rotate keys VAULT ITEM (options)
knife encrypt update VAULT ITEM VALUES (options)

** ENVIRONMENT COMMANDS **
knife environment compare [ENVIRONMENT..] (options)
knife environment create ENVIRONMENT (options)
knife environment delete ENVIRONMENT (options)
knife environment edit ENVIRONMENT (options)
knife environment from file FILE [FILE..] (options)
knife environment list (options)
knife environment show ENVIRONMENT (options)

** EXEC COMMANDS **
knife exec [SCRIPT] (options)

** HELP COMMANDS **
knife help [list|TOPIC]

** INDEX COMMANDS **
knife index rebuild (options)

** JOB COMMANDS **
knife job list
knife job output <job id> <node> [<node> ...]
knife job start <command> [<node> <node> ...]
knife job status <job id>

** KNIFE COMMANDS **
Usage: /usr/bin/knife (options)

** NODE COMMANDS **
knife node bulk delete REGEX (options)
knife node create NODE (options)
knife node delete [NODE[,NODE]] (options)
knife node edit NODE (options)
knife node environment set NODE ENVIRONMENT
knife node from file FILE (options)
knife node list (options)
knife node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list remove [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list set NODE ENTRIES (options)
knife node show NODE (options)
knife node status [<node> <node> ...]

** NULL COMMANDS **
knife null

** OSC COMMANDS **
knife osc_user create USER (options)
knife osc_user delete USER (options)
knife osc_user edit USER (options)
knife osc_user list (options)
knife osc_user reregister USER (options)
knife osc_user show USER (options)

** PATH-BASED COMMANDS **
knife delete [PATTERN1 ... PATTERNn]
knife deps PATTERN1 [PATTERNn]
knife diff PATTERNS
knife download PATTERNS
knife edit [PATTERN1 ... PATTERNn]
knife list [-dfR1p] [PATTERN1 ... PATTERNn]
knife show [PATTERN1 ... PATTERNn]
knife upload PATTERNS
knife xargs [COMMAND]

** RAW COMMANDS **
knife raw REQUEST_PATH

** RECIPE COMMANDS **
knife recipe list [PATTERN]

** REHASH COMMANDS **
knife rehash

** ROLE COMMANDS **
knife role bulk delete REGEX (options)
knife role create ROLE (options)
knife role delete ROLE (options)
knife role edit ROLE (options)
knife role env_run_list add [ROLE] [ENVIRONMENT] [ENTRY[,ENTRY]] (options)
knife role env_run_list clear [ROLE] [ENVIRONMENT]
knife role env_run_list remove [ROLE] [ENVIRONMENT] [ENTRIES]
knife role env_run_list replace [ROLE] [ENVIRONMENT] [OLD_ENTRY] [NEW_ENTRY]
knife role env_run_list set [ROLE] [ENVIRONMENT] [ENTRIES]
knife role from file FILE [FILE..] (options)
knife role list (options)
knife role run_list add [ROLE] [ENTRY[,ENTRY]] (options)
knife role run_list clear [ROLE]
knife role run_list remove [ROLE] [ENTRY]
knife role run_list replace [ROLE] [OLD_ENTRY] [NEW_ENTRY]
knife role run_list set [ROLE] [ENTRIES]
knife role show ROLE (options)

** SEARCH COMMANDS **
knife search INDEX QUERY (options)

** SERVE COMMANDS **
knife serve (options)

** SPORK COMMANDS **
knife spork bump COOKBOOK [major|minor|patch|manual]
knife spork check COOKBOOK (options)
knife spork data bag create BAG [ITEM] (options)
knife spork data bag delete BAG [ITEM] (options)
knife spork data bag edit BAG ITEM (options)
knife spork data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife spork delete [COOKBOOKS...] (options)
knife spork environment check ENVIRONMENT (options)
knife spork environment create ENVIRONMENT (options)
knife spork environment delete ENVIRONMENT (options)
knife spork environment edit ENVIRONMENT (options)
knife spork environment from file FILENAME (options)
knife spork info
knife spork node create NODE (options)
knife spork node delete NODE (options)
knife spork node edit NODE (options)
knife spork node from file FILE (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list set NODE ENTRIES (options)
knife spork omni COOKBOOK (options)
knife spork promote ENVIRONMENT COOKBOOK (options)
knife spork role create ROLE (options)
knife spork role delete ROLENAME (options)
knife spork role edit ROLENAME (options)
knife spork role from file FILENAME (options)
knife spork upload [COOKBOOKS...] (options)

** SSH COMMANDS **
knife ssh QUERY COMMAND (options)

** SSL COMMANDS **
knife ssl check [URL] (options)
knife ssl fetch [URL] (options)

** STATUS COMMANDS **
knife status QUERY (options)

** SUPERMARKET COMMANDS **
knife supermarket download COOKBOOK [VERSION] (options)
knife supermarket install COOKBOOK [VERSION] (options)
knife supermarket list (options)
knife supermarket search QUERY (options)
knife supermarket share COOKBOOK [CATEGORY] (options)
knife supermarket show COOKBOOK [VERSION] (options)
knife supermarket unshare COOKBOOK (options)

** TAG COMMANDS **
knife tag create NODE TAG ...
knife tag delete NODE TAG ...
knife tag list NODE

** USER COMMANDS **
knife user create USERNAME DISPLAY_NAME FIRST_NAME LAST_NAME EMAIL PASSWORD (options)
knife user delete USER (options)
knife user edit USER (options)
knife user key create USER (options)
knife user key delete USER KEYNAME (options)
knife user key edit USER KEYNAME (options)
knife user key list USER (options)
knife user key show USER KEYNAME (options)
knife user list (options)
knife user reregister USER (options)
knife user show USER (options)

** VAULT COMMANDS **
knife vault create VAULT ITEM VALUES (options)
knife vault decrypt VAULT ITEM [VALUES] (options)
knife vault delete VAULT ITEM (options)
knife vault download VAULT ITEM PATH (options)
knife vault edit VAULT ITEM (options)
knife vault isvault VAULT ITEM (options)
knife vault itemtype VAULT ITEM (options)
knife vault list (options)
knife vault refresh VAULT ITEM
knife vault remove VAULT ITEM VALUES (options)
knife vault rotate all keys
knife vault rotate keys VAULT ITEM (options)
knife vault show VAULT [ITEM] [VALUES] (options)
knife vault update VAULT ITEM VALUES (options)

** WINDOWS COMMANDS **
knife windows cert generate FILE_PATH (options)
knife windows cert install CERT [CERT] (options)
knife bootstrap windows winrm FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife winrm QUERY COMMAND (options)
knife wsman test QUERY (options)
knife windows listener create (options)

** WINRM COMMANDS **
knife winrm QUERY COMMAND (options)

** WSMAN COMMANDS **
knife wsman test QUERY (options)

[root@chefdk ec2-user]# chef generate repo REPO_NAME
Recipe: code_generator::repo
  * directory[/home/ec2-user/REPO_NAME] action create
    - create new directory /home/ec2-user/REPO_NAME
  * template[/home/ec2-user/REPO_NAME/LICENSE] action create_if_missing
    - create new file /home/ec2-user/REPO_NAME/LICENSE
    - update content in file /home/ec2-user/REPO_NAME/LICENSE from none to c6e6d4
    (diff output suppressed by config)
  * cookbook_file[/home/ec2-user/REPO_NAME/.chef-repo.txt] action create_if_missing
    - create new file /home/ec2-user/REPO_NAME/.chef-repo.txt
    - update content in file /home/ec2-user/REPO_NAME/.chef-repo.txt from none to 2bed28
    (diff output suppressed by config)
  * cookbook_file[/home/ec2-user/REPO_NAME/README.md] action create_if_missing
    - create new file /home/ec2-user/REPO_NAME/README.md
    - update content in file /home/ec2-user/REPO_NAME/README.md from none to 2b4f46
    (diff output suppressed by config)
  * cookbook_file[/home/ec2-user/REPO_NAME/chefignore] action create_if_missing
    - create new file /home/ec2-user/REPO_NAME/chefignore
    - update content in file /home/ec2-user/REPO_NAME/chefignore from none to f728e0
    (diff output suppressed by config)
  * remote_directory[/home/ec2-user/REPO_NAME/cookbooks] action create_if_missing
    - create new directory /home/ec2-user/REPO_NAME/cookbooks
  Recipe: <Dynamically Defined Resource>
    * directory[/home/ec2-user/REPO_NAME/cookbooks/example] action create
      - create new directory /home/ec2-user/REPO_NAME/cookbooks/example
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/REPO_NAME/cookbooks/example/README.md] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/cookbooks/example/README.md
      - update content in file /home/ec2-user/REPO_NAME/cookbooks/example/README.md from none to d11a1f
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * cookbook_file[/home/ec2-user/REPO_NAME/cookbooks/example/metadata.rb] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/cookbooks/example/metadata.rb
      - update content in file /home/ec2-user/REPO_NAME/cookbooks/example/metadata.rb from none to f9f81a
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * directory[/home/ec2-user/REPO_NAME/cookbooks/example/attributes] action create
      - create new directory /home/ec2-user/REPO_NAME/cookbooks/example/attributes
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/REPO_NAME/cookbooks/example/attributes/default.rb] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/cookbooks/example/attributes/default.rb
      - update content in file /home/ec2-user/REPO_NAME/cookbooks/example/attributes/default.rb from none to 16a397
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * directory[/home/ec2-user/REPO_NAME/cookbooks/example/recipes] action create
      - create new directory /home/ec2-user/REPO_NAME/cookbooks/example/recipes
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/REPO_NAME/cookbooks/example/recipes/default.rb] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/cookbooks/example/recipes/default.rb
      - update content in file /home/ec2-user/REPO_NAME/cookbooks/example/recipes/default.rb from none to 8c5dc6
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * remote_directory[/home/ec2-user/REPO_NAME/data_bags] action create_if_missing
    - create new directory /home/ec2-user/REPO_NAME/data_bags
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/home/ec2-user/REPO_NAME/data_bags/README.md] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/data_bags/README.md
      - update content in file /home/ec2-user/REPO_NAME/data_bags/README.md from none to 9bb9c0
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * directory[/home/ec2-user/REPO_NAME/data_bags/example] action create
      - create new directory /home/ec2-user/REPO_NAME/data_bags/example
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/REPO_NAME/data_bags/example/example_item.json] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/data_bags/example/example_item.json
      - update content in file /home/ec2-user/REPO_NAME/data_bags/example/example_item.json from none to 1048ec
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * remote_directory[/home/ec2-user/REPO_NAME/roles] action create_if_missing
    - create new directory /home/ec2-user/REPO_NAME/roles
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/home/ec2-user/REPO_NAME/roles/README.md] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/roles/README.md
      - update content in file /home/ec2-user/REPO_NAME/roles/README.md from none to c36187
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * cookbook_file[/home/ec2-user/REPO_NAME/roles/example.json] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/roles/example.json
      - update content in file /home/ec2-user/REPO_NAME/roles/example.json from none to 297ea8
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * remote_directory[/home/ec2-user/REPO_NAME/environments] action create_if_missing
    - create new directory /home/ec2-user/REPO_NAME/environments
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/home/ec2-user/REPO_NAME/environments/README.md] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/environments/README.md
      - update content in file /home/ec2-user/REPO_NAME/environments/README.md from none to c9ccdf
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * cookbook_file[/home/ec2-user/REPO_NAME/environments/example.json] action create_if_missing
      - create new file /home/ec2-user/REPO_NAME/environments/example.json
      - update content in file /home/ec2-user/REPO_NAME/environments/example.json from none to 59a963
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * cookbook_file[/home/ec2-user/REPO_NAME/cookbooks/README.md] action create_if_missing
    - create new file /home/ec2-user/REPO_NAME/cookbooks/README.md
    - update content in file /home/ec2-user/REPO_NAME/cookbooks/README.md from none to 86e9ef
    (diff output suppressed by config)
[root@chefdk ec2-user]# ls
byresh_insta  chefdk-1.2.22-1.el6.x86_64.rpm  REPO_NAME
[root@chefdk ec2-user]# cd REPO_NAME/
[root@chefdk REPO_NAME]# ls
chefignore  cookbooks  data_bags  environments  LICENSE  README.md  roles
[root@chefdk REPO_NAME]# cat roles/
example.json  README.md
[root@chefdk REPO_NAME]# cat README.md
# Overview

Every Chef installation needs a Chef Repository. This is the place where cookbooks, roles, config files and other artifacts for managing systems with Chef will live. We strongly recommend storing this repository in a version control system such as Git and treat it like source code.

While we prefer Git, and make this repository available via GitHub, you are welcome to download a tar or zip archive and use your favorite version control system to manage the code.

# Repository Directories

This repository contains several directories, and each directory contains a README file that describes what it is for in greater detail, and how to use it for managing your systems with Chef.

- `cookbooks/` - Cookbooks you download or create.
- `data_bags/` - Store data bags and items in .json in the repository.
- `roles/` - Store roles in .rb or .json in the repository.
- `environments/` - Store environments in .rb or .json in the repository.

# Configuration

The config file, `.chef/knife.rb` is a repository specific configuration file for knife. If you're using the Chef Platform, you can download one for your organization from the management console. If you're using the Open Source Chef Server, you can generate a new one with `knife configure`. For more information about configuring Knife, see the Knife documentation.

<https://docs.chef.io/knife.html>

# Next Steps

Read the README file in each of the subdirectories for more information about what goes in those directories.
[root@chefdk REPO_NAME]# cd ..
[root@chefdk ec2-user]# knife delete --chef-repo-path /home/ec2-user
WARNING: No knife configuration file found
USAGE: knife delete [PATTERN1 ... PATTERNn]
        --both                       Delete both the local and remote copies.
        --chef-repo-path PATH        Overrides the location of chef repo. Default is specified by chef_repo_path in the config
    -s, --server-url URL             Chef Server URL
        --chef-zero-host HOST        Host to start chef-zero on
        --chef-zero-port PORT        Port (or port range) to start chef-zero on.  Port ranges like 1000,1010 or 8889-9999 will try all given ports until one works.
    -k, --key KEY                    API Client Key
        --[no-]color                 Use colored output, defaults to enabled
        --concurrency THREADS        Maximum number of simultaneous requests to send (default: 10)
    -c, --config CONFIG              The configuration file to use
        --config-option OPTION=VALUE Override a single configuration option
        --defaults                   Accept default values for all questions
    -d, --disable-editing            Do not open EDITOR, just accept the data as is
    -e, --editor EDITOR              Set the editor to use for interactive commands
    -E, --environment ENVIRONMENT    Set the Chef environment (except for in searches, where this will be flagrantly ignored)
        --[no-]fips                  Enable fips mode
    -F, --format FORMAT              Which format to use for output
        --[no-]listen                Whether a local mode (-z) server binds to a port
        --local                      Delete the local copy (leave the remote copy).
    -z, --local-mode                 Point knife commands at local repository instead of server
    -u, --user USER                  API Client Username
        --print-after                Show the data after a destructive operation
    -r, --[no-]recurse               Delete directories recursively.
        --repo-mode MODE             Specifies the local repository layout.  Values: static, everything, hosted_everything.  Default: everything/hosted_everything
    -V, --verbose                    More verbose output. Use twice for max verbosity
    -v, --version                    Show chef version
    -y, --yes                        Say yes to all prompts for confirmation
    -h, --help                       Show this message
FATAL: You must specify at least one argument. If you want to delete everything in this directory, run "knife delete --recurse ."
[root@chefdk ec2-user]# pwd
/home/ec2-user
[root@chefdk ec2-user]# knife delete --chef-repo-path PATH
WARNING: No knife configuration file found
USAGE: knife delete [PATTERN1 ... PATTERNn]
        --both                       Delete both the local and remote copies.
        --chef-repo-path PATH        Overrides the location of chef repo. Default is specified by chef_repo_path in the config
    -s, --server-url URL             Chef Server URL
        --chef-zero-host HOST        Host to start chef-zero on
        --chef-zero-port PORT        Port (or port range) to start chef-zero on.  Port ranges like 1000,1010 or 8889-9999 will try all given ports until one works.
    -k, --key KEY                    API Client Key
        --[no-]color                 Use colored output, defaults to enabled
        --concurrency THREADS        Maximum number of simultaneous requests to send (default: 10)
    -c, --config CONFIG              The configuration file to use
        --config-option OPTION=VALUE Override a single configuration option
        --defaults                   Accept default values for all questions
    -d, --disable-editing            Do not open EDITOR, just accept the data as is
    -e, --editor EDITOR              Set the editor to use for interactive commands
    -E, --environment ENVIRONMENT    Set the Chef environment (except for in searches, where this will be flagrantly ignored)
        --[no-]fips                  Enable fips mode
    -F, --format FORMAT              Which format to use for output
        --[no-]listen                Whether a local mode (-z) server binds to a port
        --local                      Delete the local copy (leave the remote copy).
    -z, --local-mode                 Point knife commands at local repository instead of server
    -u, --user USER                  API Client Username
        --print-after                Show the data after a destructive operation
    -r, --[no-]recurse               Delete directories recursively.
        --repo-mode MODE             Specifies the local repository layout.  Values: static, everything, hosted_everything.  Default: everything/hosted_everything
    -V, --verbose                    More verbose output. Use twice for max verbosity
    -v, --version                    Show chef version
    -y, --yes                        Say yes to all prompts for confirmation
    -h, --help                       Show this message
FATAL: You must specify at least one argument. If you want to delete everything in this directory, run "knife delete --recurse ."
[root@chefdk ec2-user]# knife delete --both
WARNING: No knife configuration file found
USAGE: knife delete [PATTERN1 ... PATTERNn]
        --both                       Delete both the local and remote copies.
        --chef-repo-path PATH        Overrides the location of chef repo. Default is specified by chef_repo_path in the config
    -s, --server-url URL             Chef Server URL
        --chef-zero-host HOST        Host to start chef-zero on
        --chef-zero-port PORT        Port (or port range) to start chef-zero on.  Port ranges like 1000,1010 or 8889-9999 will try all given ports until one works.
    -k, --key KEY                    API Client Key
        --[no-]color                 Use colored output, defaults to enabled
        --concurrency THREADS        Maximum number of simultaneous requests to send (default: 10)
    -c, --config CONFIG              The configuration file to use
        --config-option OPTION=VALUE Override a single configuration option
        --defaults                   Accept default values for all questions
    -d, --disable-editing            Do not open EDITOR, just accept the data as is
    -e, --editor EDITOR              Set the editor to use for interactive commands
    -E, --environment ENVIRONMENT    Set the Chef environment (except for in searches, where this will be flagrantly ignored)
        --[no-]fips                  Enable fips mode
    -F, --format FORMAT              Which format to use for output
        --[no-]listen                Whether a local mode (-z) server binds to a port
        --local                      Delete the local copy (leave the remote copy).
    -z, --local-mode                 Point knife commands at local repository instead of server
    -u, --user USER                  API Client Username
        --print-after                Show the data after a destructive operation
    -r, --[no-]recurse               Delete directories recursively.
        --repo-mode MODE             Specifies the local repository layout.  Values: static, everything, hosted_everything.  Default: everything/hosted_everything
    -V, --verbose                    More verbose output. Use twice for max verbosity
    -v, --version                    Show chef version
    -y, --yes                        Say yes to all prompts for confirmation
    -h, --help                       Show this message
FATAL: You must specify at least one argument. If you want to delete everything in this directory, run "knife delete --recurse ."
[root@chefdk ec2-user]# knife delete REPO_NAME/
WARNING: No knife configuration file found
ERROR: Attempt to use relative path 'REPO_NAME/' when current directory is outside the repository path.
ERROR: Current working directory is '/home/ec2-user'.
[root@chefdk ec2-user]# ls
byresh_insta  chefdk-1.2.22-1.el6.x86_64.rpm  REPO_NAME
[root@chefdk ec2-user]# knife cookbooks delete
FATAL: Cannot find subcommand for: 'cookbooks delete'
Available subcommands: (for details, knife SUB-COMMAND --help)

** OPSCODE PRIVATE CHEF ORGANIZATION MANAGEMENT COMMANDS **
knife opc org create ORG_SHORT_NAME ORG_FULL_NAME (options)
knife opc org delete ORG_NAME
knife opc org edit ORG
knife opc org list
knife opc org show ORGNAME
knife opc org user add ORG_NAME USER_NAME
knife opc org user remove ORG_NAME USER_NAME
knife opc user create USERNAME FIRST_NAME [MIDDLE_NAME] LAST_NAME EMAIL PASSWORD
knife opc user delete USERNAME [-d]
knife opc user edit USERNAME
knife opc user list
knife opc user password USERNAME [PASSWORD | --enable-external-auth]
knife opc user show USERNAME

** BOOTSTRAP COMMANDS **
knife bootstrap [SSH_USER@]FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife bootstrap windows winrm FQDN (options)

** CLIENT COMMANDS **
knife client bulk delete REGEX (options)
knife client create CLIENTNAME (options)
knife client delete [CLIENT[,CLIENT]] (options)
knife client edit CLIENT (options)
Usage: /usr/bin/knife (options)
knife client key delete CLIENT KEYNAME (options)
knife client key edit CLIENT KEYNAME (options)
knife client key list CLIENT (options)
knife client key show CLIENT KEYNAME (options)
knife client list (options)
knife client reregister CLIENT (options)
knife client show CLIENT (options)

** CONFIGURE COMMANDS **
knife configure (options)
knife configure client DIRECTORY

** COOKBOOK COMMANDS **
knife cookbook bulk delete REGEX (options)
knife cookbook create COOKBOOK (options)
knife cookbook delete COOKBOOK VERSION (options)
knife cookbook download COOKBOOK [VERSION] (options)
knife cookbook list (options)
knife cookbook metadata COOKBOOK (options)
knife cookbook metadata from FILE (options)
knife cookbook show COOKBOOK [VERSION] [PART] [FILENAME] (options)
knife cookbook test [COOKBOOKS...] (options)
knife cookbook upload [COOKBOOKS...] (options)

** COOKBOOK SITE COMMANDS **
knife cookbook site download COOKBOOK [VERSION] (options)
knife cookbook site install COOKBOOK [VERSION] (options)
knife cookbook site list (options)
knife cookbook site search QUERY (options)
knife cookbook site share COOKBOOK [CATEGORY] (options)
knife cookbook site show COOKBOOK [VERSION] (options)
knife cookbook site unshare COOKBOOK

** DATA BAG COMMANDS **
knife data bag create BAG [ITEM] (options)
knife data bag delete BAG [ITEM] (options)
knife data bag edit BAG ITEM (options)
knife data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife data bag list (options)
knife data bag show BAG [ITEM] (options)

** DECRYPT COMMANDS **
knife decrypt VAULT ITEM [VALUES] (options)

** EC2 COMMANDS **
knife ec2 amis ubuntu DISTRO [TYPE] (options)

** ENCRYPT COMMANDS **
knife encrypt create VAULT ITEM VALUES (options)
knife encrypt delete VAULT ITEM (options)
knife encrypt remove VAULT ITEM VALUES (options)
knife encrypt rotate keys VAULT ITEM (options)
knife encrypt update VAULT ITEM VALUES (options)

** ENVIRONMENT COMMANDS **
knife environment compare [ENVIRONMENT..] (options)
knife environment create ENVIRONMENT (options)
knife environment delete ENVIRONMENT (options)
knife environment edit ENVIRONMENT (options)
knife environment from file FILE [FILE..] (options)
knife environment list (options)
knife environment show ENVIRONMENT (options)

** EXEC COMMANDS **
knife exec [SCRIPT] (options)

** HELP COMMANDS **
knife help [list|TOPIC]

** INDEX COMMANDS **
knife index rebuild (options)

** JOB COMMANDS **
knife job list
knife job output <job id> <node> [<node> ...]
knife job start <command> [<node> <node> ...]
knife job status <job id>

** KNIFE COMMANDS **
Usage: /usr/bin/knife (options)

** NODE COMMANDS **
knife node bulk delete REGEX (options)
knife node create NODE (options)
knife node delete [NODE[,NODE]] (options)
knife node edit NODE (options)
knife node environment set NODE ENVIRONMENT
knife node from file FILE (options)
knife node list (options)
knife node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list remove [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list set NODE ENTRIES (options)
knife node show NODE (options)
knife node status [<node> <node> ...]

** NULL COMMANDS **
knife null

** OSC COMMANDS **
knife osc_user create USER (options)
knife osc_user delete USER (options)
knife osc_user edit USER (options)
knife osc_user list (options)
knife osc_user reregister USER (options)
knife osc_user show USER (options)

** PATH-BASED COMMANDS **
knife delete [PATTERN1 ... PATTERNn]
knife deps PATTERN1 [PATTERNn]
knife diff PATTERNS
knife download PATTERNS
knife edit [PATTERN1 ... PATTERNn]
knife list [-dfR1p] [PATTERN1 ... PATTERNn]
knife show [PATTERN1 ... PATTERNn]
knife upload PATTERNS
knife xargs [COMMAND]

** RAW COMMANDS **
knife raw REQUEST_PATH

** RECIPE COMMANDS **
knife recipe list [PATTERN]

** REHASH COMMANDS **
knife rehash

** ROLE COMMANDS **
knife role bulk delete REGEX (options)
knife role create ROLE (options)
knife role delete ROLE (options)
knife role edit ROLE (options)
knife role env_run_list add [ROLE] [ENVIRONMENT] [ENTRY[,ENTRY]] (options)
knife role env_run_list clear [ROLE] [ENVIRONMENT]
knife role env_run_list remove [ROLE] [ENVIRONMENT] [ENTRIES]
knife role env_run_list replace [ROLE] [ENVIRONMENT] [OLD_ENTRY] [NEW_ENTRY]
knife role env_run_list set [ROLE] [ENVIRONMENT] [ENTRIES]
knife role from file FILE [FILE..] (options)
knife role list (options)
knife role run_list add [ROLE] [ENTRY[,ENTRY]] (options)
knife role run_list clear [ROLE]
knife role run_list remove [ROLE] [ENTRY]
knife role run_list replace [ROLE] [OLD_ENTRY] [NEW_ENTRY]
knife role run_list set [ROLE] [ENTRIES]
knife role show ROLE (options)

** SEARCH COMMANDS **
knife search INDEX QUERY (options)

** SERVE COMMANDS **
knife serve (options)

** SPORK COMMANDS **
knife spork bump COOKBOOK [major|minor|patch|manual]
knife spork check COOKBOOK (options)
knife spork data bag create BAG [ITEM] (options)
knife spork data bag delete BAG [ITEM] (options)
knife spork data bag edit BAG ITEM (options)
knife spork data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife spork delete [COOKBOOKS...] (options)
knife spork environment check ENVIRONMENT (options)
knife spork environment create ENVIRONMENT (options)
knife spork environment delete ENVIRONMENT (options)
knife spork environment edit ENVIRONMENT (options)
knife spork environment from file FILENAME (options)
knife spork info
knife spork node create NODE (options)
knife spork node delete NODE (options)
knife spork node edit NODE (options)
knife spork node from file FILE (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list set NODE ENTRIES (options)
knife spork omni COOKBOOK (options)
knife spork promote ENVIRONMENT COOKBOOK (options)
knife spork role create ROLE (options)
knife spork role delete ROLENAME (options)
knife spork role edit ROLENAME (options)
knife spork role from file FILENAME (options)
knife spork upload [COOKBOOKS...] (options)

** SSH COMMANDS **
knife ssh QUERY COMMAND (options)

** SSL COMMANDS **
knife ssl check [URL] (options)
knife ssl fetch [URL] (options)

** STATUS COMMANDS **
knife status QUERY (options)

** SUPERMARKET COMMANDS **
knife supermarket download COOKBOOK [VERSION] (options)
knife supermarket install COOKBOOK [VERSION] (options)
knife supermarket list (options)
knife supermarket search QUERY (options)
knife supermarket share COOKBOOK [CATEGORY] (options)
knife supermarket show COOKBOOK [VERSION] (options)
knife supermarket unshare COOKBOOK (options)

** TAG COMMANDS **
knife tag create NODE TAG ...
knife tag delete NODE TAG ...
knife tag list NODE

** USER COMMANDS **
knife user create USERNAME DISPLAY_NAME FIRST_NAME LAST_NAME EMAIL PASSWORD (options)
knife user delete USER (options)
knife user edit USER (options)
knife user key create USER (options)
knife user key delete USER KEYNAME (options)
knife user key edit USER KEYNAME (options)
knife user key list USER (options)
knife user key show USER KEYNAME (options)
knife user list (options)
knife user reregister USER (options)
knife user show USER (options)

** VAULT COMMANDS **
knife vault create VAULT ITEM VALUES (options)
knife vault decrypt VAULT ITEM [VALUES] (options)
knife vault delete VAULT ITEM (options)
knife vault download VAULT ITEM PATH (options)
knife vault edit VAULT ITEM (options)
knife vault isvault VAULT ITEM (options)
knife vault itemtype VAULT ITEM (options)
knife vault list (options)
knife vault refresh VAULT ITEM
knife vault remove VAULT ITEM VALUES (options)
knife vault rotate all keys
knife vault rotate keys VAULT ITEM (options)
knife vault show VAULT [ITEM] [VALUES] (options)
knife vault update VAULT ITEM VALUES (options)

** WINDOWS COMMANDS **
knife windows cert generate FILE_PATH (options)
knife windows cert install CERT [CERT] (options)
knife bootstrap windows winrm FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife winrm QUERY COMMAND (options)
knife wsman test QUERY (options)
knife windows listener create (options)

** WINRM COMMANDS **
knife winrm QUERY COMMAND (options)

** WSMAN COMMANDS **
knife wsman test QUERY (options)

[root@chefdk ec2-user]# ls
byresh_insta  chefdk-1.2.22-1.el6.x86_64.rpm  REPO_NAME
[root@chefdk ec2-user]# cd REPO_NAME/
[root@chefdk REPO_NAME]# ls
chefignore  cookbooks  data_bags  environments  LICENSE  README.md  roles
[root@chefdk REPO_NAME]# cd cookbooks/
[root@chefdk cookbooks]# ls
example  README.md
[root@chefdk cookbooks]# cd ..
[root@chefdk REPO_NAME]# cd ..
[root@chefdk ec2-user]# rm -rf REPO_NAME/
[root@chefdk ec2-user]# ls
byresh_insta  chefdk-1.2.22-1.el6.x86_64.rpm
[root@chefdk ec2-user]# chef generete repo chef-repo
Unknown command `generete'.
Usage:
    chef -h/--help
    chef -v/--version
    chef command [arguments...] [options...]


Available Commands:
    exec                    Runs the command in context of the embedded ruby
    env                     Prints environment variables used by ChefDK
    gem                     Runs the `gem` command in context of the embedded ruby
    generate                Generate a new app, cookbook, or component
    shell-init              Initialize your shell to use ChefDK as your primary ruby
    install                 Install cookbooks from a Policyfile and generate a locked cookbook set
    update                  Updates a Policyfile.lock.json with latest run_list and cookbooks
    push                    Push a local policy lock to a policy group on the server
    push-archive            Push a policy archive to a policy group on the server
    show-policy             Show policyfile objects on your Chef Server
    diff                    Generate an itemized diff of two Policyfile lock documents
    provision               Provision VMs and clusters via cookbook
    export                  Export a policy lock as a Chef Zero code repo
    clean-policy-revisions  Delete unused policy revisions on the server
    clean-policy-cookbooks  Delete unused policyfile cookbooks on the server
    delete-policy-group     Delete a policy group on the server
    delete-policy           Delete all revisions of a policy on the server
    undelete                Undo a delete command
    verify                  Test the embedded ChefDK applications
[root@chefdk ec2-user]# chef generate repo chef-repo
Recipe: code_generator::repo
  * directory[/home/ec2-user/chef-repo] action create
    - create new directory /home/ec2-user/chef-repo
  * template[/home/ec2-user/chef-repo/LICENSE] action create_if_missing
    - create new file /home/ec2-user/chef-repo/LICENSE
    - update content in file /home/ec2-user/chef-repo/LICENSE from none to c6e6d4
    (diff output suppressed by config)
  * cookbook_file[/home/ec2-user/chef-repo/.chef-repo.txt] action create_if_missing
    - create new file /home/ec2-user/chef-repo/.chef-repo.txt
    - update content in file /home/ec2-user/chef-repo/.chef-repo.txt from none to 2bed28
    (diff output suppressed by config)
  * cookbook_file[/home/ec2-user/chef-repo/README.md] action create_if_missing
    - create new file /home/ec2-user/chef-repo/README.md
    - update content in file /home/ec2-user/chef-repo/README.md from none to 2b4f46
    (diff output suppressed by config)
  * cookbook_file[/home/ec2-user/chef-repo/chefignore] action create_if_missing
    - create new file /home/ec2-user/chef-repo/chefignore
    - update content in file /home/ec2-user/chef-repo/chefignore from none to f728e0
    (diff output suppressed by config)
  * remote_directory[/home/ec2-user/chef-repo/cookbooks] action create_if_missing
    - create new directory /home/ec2-user/chef-repo/cookbooks
  Recipe: <Dynamically Defined Resource>
    * directory[/home/ec2-user/chef-repo/cookbooks/example] action create
      - create new directory /home/ec2-user/chef-repo/cookbooks/example
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/chef-repo/cookbooks/example/README.md] action create_if_missing
      - create new file /home/ec2-user/chef-repo/cookbooks/example/README.md
      - update content in file /home/ec2-user/chef-repo/cookbooks/example/README.md from none to d11a1f
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * cookbook_file[/home/ec2-user/chef-repo/cookbooks/example/metadata.rb] action create_if_missing
      - create new file /home/ec2-user/chef-repo/cookbooks/example/metadata.rb
      - update content in file /home/ec2-user/chef-repo/cookbooks/example/metadata.rb from none to f9f81a
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * directory[/home/ec2-user/chef-repo/cookbooks/example/attributes] action create
      - create new directory /home/ec2-user/chef-repo/cookbooks/example/attributes
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/chef-repo/cookbooks/example/attributes/default.rb] action create_if_missing
      - create new file /home/ec2-user/chef-repo/cookbooks/example/attributes/default.rb
      - update content in file /home/ec2-user/chef-repo/cookbooks/example/attributes/default.rb from none to 16a397
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * directory[/home/ec2-user/chef-repo/cookbooks/example/recipes] action create
      - create new directory /home/ec2-user/chef-repo/cookbooks/example/recipes
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/chef-repo/cookbooks/example/recipes/default.rb] action create_if_missing
      - create new file /home/ec2-user/chef-repo/cookbooks/example/recipes/default.rb
      - update content in file /home/ec2-user/chef-repo/cookbooks/example/recipes/default.rb from none to 8c5dc6
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * remote_directory[/home/ec2-user/chef-repo/data_bags] action create_if_missing
    - create new directory /home/ec2-user/chef-repo/data_bags
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/home/ec2-user/chef-repo/data_bags/README.md] action create_if_missing
      - create new file /home/ec2-user/chef-repo/data_bags/README.md
      - update content in file /home/ec2-user/chef-repo/data_bags/README.md from none to 9bb9c0
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * directory[/home/ec2-user/chef-repo/data_bags/example] action create
      - create new directory /home/ec2-user/chef-repo/data_bags/example
      - change mode from '' to '0755'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * cookbook_file[/home/ec2-user/chef-repo/data_bags/example/example_item.json] action create_if_missing
      - create new file /home/ec2-user/chef-repo/data_bags/example/example_item.json
      - update content in file /home/ec2-user/chef-repo/data_bags/example/example_item.json from none to 1048ec
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * remote_directory[/home/ec2-user/chef-repo/roles] action create_if_missing
    - create new directory /home/ec2-user/chef-repo/roles
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/home/ec2-user/chef-repo/roles/README.md] action create_if_missing
      - create new file /home/ec2-user/chef-repo/roles/README.md
      - update content in file /home/ec2-user/chef-repo/roles/README.md from none to c36187
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * cookbook_file[/home/ec2-user/chef-repo/roles/example.json] action create_if_missing
      - create new file /home/ec2-user/chef-repo/roles/example.json
      - update content in file /home/ec2-user/chef-repo/roles/example.json from none to 297ea8
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * remote_directory[/home/ec2-user/chef-repo/environments] action create_if_missing
    - create new directory /home/ec2-user/chef-repo/environments
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/home/ec2-user/chef-repo/environments/README.md] action create_if_missing
      - create new file /home/ec2-user/chef-repo/environments/README.md
      - update content in file /home/ec2-user/chef-repo/environments/README.md from none to c9ccdf
      (diff output suppressed by config)
      - change mode from '' to '0644'
    * cookbook_file[/home/ec2-user/chef-repo/environments/example.json] action create_if_missing
      - create new file /home/ec2-user/chef-repo/environments/example.json
      - update content in file /home/ec2-user/chef-repo/environments/example.json from none to 59a963
      (diff output suppressed by config)
      - change mode from '' to '0644'

Recipe: code_generator::repo
  * cookbook_file[/home/ec2-user/chef-repo/cookbooks/README.md] action create_if_missing
    - create new file /home/ec2-user/chef-repo/cookbooks/README.md
    - update content in file /home/ec2-user/chef-repo/cookbooks/README.md from none to 86e9ef
    (diff output suppressed by config)
[root@chefdk ec2-user]# ls
byresh_insta  chefdk-1.2.22-1.el6.x86_64.rpm  chef-repo
[root@chefdk ec2-user]# cd chef-repo/
[root@chefdk chef-repo]# ls
chefignore  cookbooks  data_bags  environments  LICENSE  README.md  roles
[root@chefdk chef-repo]# cd cookbooks/
[root@chefdk cookbooks]# ls
example  README.md
[root@chefdk cookbooks]# cd example/
[root@chefdk example]# ls
attributes  metadata.rb  README.md  recipes
[root@chefdk example]# cd recipes/
[root@chefdk recipes]# ls
default.rb
[root@chefdk recipes]# cat default.rb
# This is a Chef recipe file. It can be used to specify resources which will
# apply configuration to a server.

log "Welcome to Chef, #{node["example"]["name"]}!" do
  level :info
end

# For more information, see the documentation: https://docs.chef.io/recipes.html
[root@chefdk recipes]# cd ..
[root@chefdk example]# cd ..
[root@chefdk cookbooks]# cd ..
[root@chefdk chef-repo]# ls
chefignore  cookbooks  data_bags  environments  LICENSE  README.md  roles
[root@chefdk chef-repo]# cd c
bash: cd: c: No such file or directory
[root@chefdk chef-repo]# cd c
bash: cd: c: No such file or directory
[root@chefdk chef-repo]# cd cookbooks/
[root@chefdk cookbooks]# cat README.md
This directory contains the cookbooks used to configure systems in your infrastructure with Chef - an example basic cookbook called `example` has been automatically created for you.

Knife needs to be configured to know where the cookbooks are located with the `cookbook_path` setting. If this is not set, then several cookbook operations will fail to work properly.

    cookbook_path ["./cookbooks"]

This setting tells knife to look for the cookbooks directory in the present working directory. This means the knife cookbook subcommands need to be run in the `chef-repo` directory itself. To make sure that the cookbooks can be found elsewhere inside the repository, use an absolute path. This is a Ruby file, so something like the following can be used:

    current_dir = File.dirname(__FILE__)
    cookbook_path ["#{current_dir}/../cookbooks"]

Which will set `current_dir` to the location of the knife.rb file itself (e.g. `~/chef-repo/.chef/knife.rb`).

Configure knife to use your preferred copyright holder, email contact and license. Add the following lines to `.chef/knife.rb`.

    cookbook_copyright "Example, Com."
    cookbook_email     "cookbooks@example.com"
    cookbook_license   "apachev2"

Supported values for `cookbook_license` are "apachev2", "mit","gplv2","gplv3",  or "none". These settings are used to prefill comments in the default recipe, and the corresponding values in the metadata.rb. You are free to change the the comments in those files.

Create new cookbooks in this directory with Knife.

    knife cookbook create COOKBOOK

This will create all the cookbook directory components. You don't need to use them all, and can delete the ones you don't need. It also creates a README file, metadata.rb and default recipe.

You can also download cookbooks directly from the Opscode Cookbook Site. There are two subcommands to help with this depending on what your preference is.

The first and recommended method is to use a vendor branch if you're using Git. This is automatically handled with Knife.

    knife cookbook site install COOKBOOK

This will:

* Download the cookbook tarball from the Chef Supermarket.
* Ensure its on the git master branch.
* Checks for an existing vendor branch, and creates if it doesn't.
* Checks out the vendor branch (chef-vendor-COOKBOOK).
* Removes the existing (old) version.
* Untars the cookbook tarball it downloaded in the first step.
* Adds the cookbook files to the git index and commits.
* Creates a tag for the version downloaded.
* Checks out the master branch again.
* Merges the cookbook into master.
* Repeats the above for all the cookbooks dependencies, downloading them from the community site

The last step will ensure that any local changes or modifications you have made to the cookbook are preserved, so you can keep your changes through upstream updates.

If you're not using Git, use the site download subcommand to download the tarball.

    knife cookbook site download COOKBOOK

This creates the COOKBOOK.tar.gz from in the current directory (e.g., `~/chef-repo`). We recommend following a workflow similar to the above for your version control tool.
[root@chefdk cookbooks]# cd ..
[root@chefdk chef-repo]# ls
chefignore  cookbooks  data_bags  environments  LICENSE  README.md  roles
[root@chefdk chef-repo]# cat c
chefignore  cookbooks/
[root@chefdk chef-repo]# cat chefignore
# Put files/directories that should be ignored in this file when uploading
# to a chef-server or supermarket.
# Lines that start with '# ' are comments.

# OS generated files #
######################
.DS_Store
Icon?
nohup.out
ehthumbs.db
Thumbs.db

# SASS #
########
.sass-cache

# EDITORS #
###########
\#*
.#*
*~
*.sw[a-z]
*.bak
REVISION
TAGS*
tmtags
*_flymake.*
*_flymake
*.tmproj
.project
.settings
mkmf.log

## COMPILED ##
##############
a.out
*.o
*.pyc
*.so
*.com
*.class
*.dll
*.exe
*/rdoc/

# Testing #
###########
.watchr
.rspec
spec/*
spec/fixtures/*
test/*
features/*
examples/*
Guardfile
Procfile
.kitchen*
.rubocop.yml
spec/*
Rakefile
.travis.yml
.foodcritic
.codeclimate.yml

# SCM #
#######
.git
*/.git
.gitignore
.gitmodules
.gitconfig
.gitattributes
.svn
*/.bzr/*
*/.hg/*
*/.svn/*

# Berkshelf #
#############
Berksfile
Berksfile.lock
cookbooks/*
tmp

# Policyfile #
##############
Policyfile.rb
Policyfile.lock.json

# Cookbooks #
#############
CONTRIBUTING*
CHANGELOG*
TESTING*
MAINTAINERS.toml

# Strainer #
############
Colanderfile
Strainerfile
.colander
.strainer

# Vagrant #
###########
.vagrant
Vagrantfile
[root@chefdk chef-repo]# clear
[root@chefdk chef-repo]# ls -a
.   chefignore      cookbooks  environments  README.md
..  .chef-repo.txt  data_bags  LICENSE       roles
[root@chefdk chef-repo]# ls
chefignore  cookbooks  data_bags  environments  LICENSE  README.md  roles
[root@chefdk chef-repo]# mkdir .chef
[root@chefdk chef-repo]# cd .chef
[root@chefdk .chef]# mv /home/ec2-user/*.pem .
[root@chefdk .chef]# mv /home/ec2-user/*.rb .
[root@chefdk .chef]# ls
byresh.pem  knife.rb
[root@chefdk .chef]# mv /home/ec2-user/*.pem .
[root@chefdk .chef]# ls
byresh_insta.pem  byresh.pem  knife.rb
[root@chefdk .chef]# mkdir j2d
[root@chefdk .chef]# cd j2d
[root@chefdk j2d]# pwd
/home/ec2-user/chef-repo/.chef/j2d
[root@chefdk j2d]# pwd >tem
[root@chefdk j2d]# ls
tem
[root@chefdk j2d]# rm tem
rm: remove regular file ‘tem’? y
[root@chefdk j2d]# ls
[root@chefdk j2d]# pwd
/home/ec2-user/chef-repo/.chef/j2d
[root@chefdk j2d]# mv /home/ec2-user/chef-repo/.chef/* .
mv: cannot move ‘/home/ec2-user/chef-repo/.chef/j2d’ to a subdirectory of itself, ‘./j2d’
[root@chefdk j2d]# mv /home/ec2-user/chef-repo/.chef/j2d/* .
mv: ‘/home/ec2-user/chef-repo/.chef/j2d/byresh_insta.pem’ and ‘./byresh_insta.pem’ are the same file
mv: ‘/home/ec2-user/chef-repo/.chef/j2d/byresh.pem’ and ‘./byresh.pem’ are the same file
mv: ‘/home/ec2-user/chef-repo/.chef/j2d/knife.rb’ and ‘./knife.rb’ are the same file
[root@chefdk j2d]# ls
byresh_insta.pem  byresh.pem  knife.rb
[root@chefdk j2d]# clear
[root@chefdk j2d]# knife ssl check
Connecting to host api.chef.io:443
Successfully verified certificates from `api.chef.io'
[root@chefdk j2d]#
login as: ec2-user
Authenticating with public key "imported-openssh-key"
Last login: Tue Apr  4 04:26:05 2017 from 122.171.221.10

       __|  __|_  )
       _|  (     /   Amazon Linux AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-ami/2016.09-release-notes/
12 package(s) needed for security, out of 23 available
Run "sudo yum update" to apply all updates.
[ec2-user@chefdk ~]$ sudo su
[root@chefdk ec2-user]# ls
chefdk-1.2.22-1.el6.x86_64.rpm  chef-repo
[root@chefdk ec2-user]# cd chef-repo/
[root@chefdk chef-repo]# cd .chef
[root@chefdk .chef]# cd j2d/
[root@chefdk j2d]# ssh -i byresh_insta.pem ec2-user@52.221.207.233
Last login: Tue Apr  4 04:24:11 2017 from 122.171.221.10

       __|  __|_  )
       _|  (     /   Amazon Linux AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-ami/2016.09-release-notes/
12 package(s) needed for security, out of 23 available
Run "sudo yum update" to apply all updates.
[ec2-user@chefclient ~]$ exit
logout
Connection to 52.221.207.233 closed.
[root@chefdk j2d]# knife bootstrap 52.221.207.233
ERROR: You must pass a node name with -N when bootstrapping with user credentials
[root@chefdk j2d]# knife bootstrap 52.221.207.233 -x ec2-user -i byresh_insta.pem -N chefclient --sudo
Node chefclient exists, overwrite it? (Y/N) n
You said no, so I'm done here.
[root@chefdk j2d]# knife bootstrap 52.221.207.233 -x ec2-user -i byresh_insta.pem -N chefclient1 --sudo
Creating new client for chefclient1
Creating new node for chefclient1
Connecting to 52.221.207.233
52.221.207.233 -----> Installing Chef Omnibus (-v 12)
52.221.207.233 downloading https://omnitruck-direct.chef.io/chef/install.sh
52.221.207.233   to file /tmp/install.sh.22943/install.sh
52.221.207.233 trying wget...
52.221.207.233 el 6 x86_64
52.221.207.233 Getting information for chef stable 12 for el...
52.221.207.233 downloading https://www.getchef.com/stable/chef/metadata?v=12&p=el&pv=6&m=x86_64
52.221.207.233   to file /tmp/install.sh.22948/metadata.txt
52.221.207.233 trying wget...
52.221.207.233 sha1     323e88bd64b166a823087d0f50a949506d0fa6b5
52.221.207.233 sha256   89e8e6e9aebe95bb31e9514052a8926f61d82067092ca3bc976b0bd223710c81
52.221.207.233 url      https://packages.chef.io/files/stable/chef/12.19.36/el/6/chef-12.19.36-1.el6.x86_64.rpm
52.221.207.233 version  12.19.36
52.221.207.233 downloaded metadata file looks valid...
52.221.207.233 downloading https://packages.chef.io/files/stable/chef/12.19.36/el/6/chef-12.19.36-1.el6.x86_64.rpm
52.221.207.233   to file /tmp/install.sh.22948/chef-12.19.36-1.el6.x86_64.rpm
52.221.207.233 trying wget...
52.221.207.233 Comparing checksum with sha256sum...
52.221.207.233 Installing chef 12
52.221.207.233 installing with rpm...
52.221.207.233 warning: /tmp/install.sh.22948/chef-12.19.36-1.el6.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
52.221.207.233 Preparing...                          ################################# [100%]
52.221.207.233 Updating / installing...
52.221.207.233    1:chef-12.19.36-1.el6              ################################# [100%]
52.221.207.233 Thank you for installing Chef!
52.221.207.233 Starting the first Chef Client run...
52.221.207.233 [2017-04-04T05:43:56+00:00] INFO: Forking chef instance to converge...
52.221.207.233 Starting Chef Client, version 12.19.36
52.221.207.233 [2017-04-04T05:43:56+00:00] INFO: *** Chef 12.19.36 ***
52.221.207.233 [2017-04-04T05:43:56+00:00] INFO: Platform: x86_64-linux
52.221.207.233 [2017-04-04T05:43:56+00:00] INFO: Chef-client pid: 23020
52.221.207.233 [2017-04-04T05:43:58+00:00] INFO: Setting the run_list to [] from CLI options
52.221.207.233 [2017-04-04T05:43:58+00:00] INFO: Run List is []
52.221.207.233 [2017-04-04T05:43:58+00:00] INFO: Run List expands to []
52.221.207.233 [2017-04-04T05:43:58+00:00] INFO: Starting Chef Run for chefclient1
52.221.207.233 [2017-04-04T05:43:58+00:00] INFO: Running start handlers
52.221.207.233 [2017-04-04T05:43:58+00:00] INFO: Start handlers complete.
52.221.207.233 [2017-04-04T05:44:00+00:00] INFO: HTTP Request Returned 404 Not Found:
52.221.207.233 [2017-04-04T05:44:00+00:00] INFO: Error while reporting run start to Data Collector. URL: https://api.chef.io/organizations/j2dc/data-collector Exception: 404 -- 404 "Not Found"  (This is normal if you do not have Chef Automate)
52.221.207.233 resolving cookbooks for run list: []
52.221.207.233 [2017-04-04T05:44:01+00:00] INFO: Loading cookbooks []
52.221.207.233 Synchronizing Cookbooks:
52.221.207.233 Installing Cookbook Gems:
52.221.207.233 Compiling Cookbooks...
52.221.207.233 [2017-04-04T05:44:01+00:00] WARN: Node chefclient1 has an empty run list.
52.221.207.233 Converging 0 resources
52.221.207.233 [2017-04-04T05:44:02+00:00] INFO: Chef Run complete in 4.118591965 seconds
52.221.207.233
52.221.207.233 Running handlers:
52.221.207.233 [2017-04-04T05:44:02+00:00] INFO: Running report handlers
52.221.207.233 Running handlers complete
52.221.207.233 [2017-04-04T05:44:02+00:00] INFO: Report handlers complete
52.221.207.233 Chef Client finished, 0/0 resources updated in 06 seconds
52.221.207.233 [2017-04-04T05:44:02+00:00] INFO: Sending resource update report (run-id: 17b0f77a-11f5-4274-8003-3a16c46f2d8d)
[root@chefdk j2d]# knife cookbook create httpd
WARN: This command is being deprecated in favor of `chef generate cookbook` and will soon return an error.
Please use `chef generate cookbook` instead of this command.
 at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/knife.rb:443:in `block in run_with_pretty_exceptions'
** Creating cookbook httpd in /home/ec2-user/chef-repo/.chef/cookbooks
** Creating README for cookbook: httpd
** Creating CHANGELOG for cookbook: httpd
** Creating metadata for cookbook: httpd
[root@chefdk j2d]# ls
byresh_insta.pem  byresh.pem  knife.rb
[root@chefdk j2d]# cd ..
[root@chefdk .chef]# ls
cookbooks  j2d
[root@chefdk .chef]# ls
cookbooks  j2d
[root@chefdk .chef]# cd cookbooks/
[root@chefdk cookbooks]# cd httpd/
[root@chefdk httpd]# cd recipes/
[root@chefdk recipes]# vim default.rb
[root@chefdk recipes]# vim default.rb
[root@chefdk recipes]# cd ..
[root@chefdk httpd]# cd ..
[root@chefdk cookbooks]# cd ..
[root@chefdk .chef]# cd j2d
[root@chefdk j2d]# knife cookbook upload httpd
Uploading httpd          [0.1.0]
Uploaded 1 cookbook.
[root@chefdk j2d]# ^C
[root@chefdk j2d]# knife node run_list set chefclient1 recipe[httpd]
chefclient1:
  run_list: recipe[httpd]
[root@chefdk j2d]# ^C
[root@chefdk j2d]#
